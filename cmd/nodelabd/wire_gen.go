// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/no-de-lab/nodelab-server/api/healthcheck"
	"github.com/no-de-lab/nodelab-server/config"
	"github.com/no-de-lab/nodelab-server/container"
	"github.com/no-de-lab/nodelab-server/db"
	"github.com/no-de-lab/nodelab-server/graphql/resolver"
	"github.com/no-de-lab/nodelab-server/internal/auth"
	graphql2 "github.com/no-de-lab/nodelab-server/internal/auth/delivery/graphql"
	http2 "github.com/no-de-lab/nodelab-server/internal/auth/delivery/http"
	"github.com/no-de-lab/nodelab-server/internal/auth/model"
	repository2 "github.com/no-de-lab/nodelab-server/internal/auth/repository"
	service2 "github.com/no-de-lab/nodelab-server/internal/auth/service"
	"github.com/no-de-lab/nodelab-server/internal/auth/util"
	"github.com/no-de-lab/nodelab-server/internal/user"
	"github.com/no-de-lab/nodelab-server/internal/user/delivery/graphql"
	"github.com/no-de-lab/nodelab-server/internal/user/delivery/http"
	"github.com/no-de-lab/nodelab-server/internal/user/repository"
	"github.com/no-de-lab/nodelab-server/internal/user/service"
)

// Injectors from wire.go:

func InitializeDIContainer() *container.DIContainer {
	configuration := config.LoadConfig()
	sqlxDB := db.NewDatabase(configuration)
	userRepository := repository.NewUserRepository(sqlxDB)
	userService := service.NewUserService(userRepository, configuration)
	userHandler := http.NewUserHandler(userService)
	authRepository := repository2.NewAuthRepository(sqlxDB)
	authService := service2.NewAuthService(userService, authRepository)
	authHandler := http2.NewAuthHandler(authService)
	healthCheckHandler := healthcheck.NewHealthCheckHandler()
	diContainer := container.NewDIContainer(configuration, userHandler, authHandler, healthCheckHandler)
	return diContainer
}

func InitializeResolver() *resolver.Resolver {
	validate := model.NewValidator()
	configuration := config.LoadConfig()
	sqlxDB := db.NewDatabase(configuration)
	userRepository := repository.NewUserRepository(sqlxDB)
	userService := service.NewUserService(userRepository, configuration)
	userResolver := graphql.NewUserResolver(validate, userService)
	jwtMaker := util.NewJWTMaker(configuration)
	authRepository := repository2.NewAuthRepository(sqlxDB)
	authService := service2.NewAuthService(userService, authRepository)
	authResolver := graphql2.NewAuthResolver(validate, jwtMaker, authService)
	resolverResolver := resolver.NewResolver(userResolver, authResolver)
	return resolverResolver
}

// wire.go:

// MainSet all instance set (service, resolver, handler ... etc)
var MainSet = wire.NewSet(healthcheck.NewHealthCheckHandler, config.LoadConfig, db.NewDatabase, auth.AuthSet, user.UserSet, container.NewDIContainer, resolver.NewResolver)
